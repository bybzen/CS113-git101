1.Function Call - Call by Value
    เราสามารถส่งค่าข้อมูล parameter จากผู้เรียกไปยังฟังก์ชันที่ถูกเรียกซึ่งการส่งข้อมูลในลักษณะนี้จะเรียกว่า
pass by value
    การส่งในลักษณะ pass by value นี้ ฟังก์ชันที่ถูกเรียกใช้จะเก็บค่าข้อมูลที่ถูกส่งเข้ามาไว้ในตัวแปรชั่วคราว
และเมื่อการทำงานในฟังก์ชันสิ้นสุดลงแล้วตัวแปรที่เก็บข้อมูลชั่วคราวก็จะหมดหน้าที่การทำงานลงไปด้วย

**************************************************************************************

2.Standard Library Function and Math Library Function
    ฟังก์ชันที่อยู่ใน Standard Library function เช่น printf, scanf, getchar, gets
    ฟังก์ชันที่อยู่ใน Math Library function เช่น sqrt, exp, log, pow, fmod

**************************************************************************************

3.Return Values
    ฟังก์ชันจะมีการส่งค่ากลับเสมอ แต่ถ้าไม่ต้องการให้ฟังก์ชันส่งค่ากลับให้เปลี่ยน type ของฟังก์ชันเป็น void

**************************************************************************************

4.Recursion(การเรียกซ้ำ)
    คือ การที่ฟังก์ชันสามารถเรียกใช้งานตัวเองได้ และเมื่อฟังก์ชันเรียกใช้งานตัวเองโปรแกรมจะทำการก๊อปปี้ค่าของตัวแปรต่างๆไว้ในฟังก์ชัน
เรียกว่า ตัวแปร local
เช่น 
    #include <stdio.h>
    #include <stdlib.h>
    int bit_binary(int binary)
    {
        if (binary < 2)
    {
       return printf("%d", binary);
    }
        else
    {
       return bit_binary(binary / 2), printf("%d", binary % 2);
    }
   
   }
   int main()
   {
       char num_str[15];
       int bit;
       fgets(num_str, 15, stdin);
       bit = atoi(num_str);
       bit_binary(bit);
   }

    Local Variables คือ ตัวแปรที่ถูกประกาศอยู่ภายในscopeฟังก์ชัน ซึ่งเป็นตัวแปร local 
สามารถใช้งานได้แค่ภายในscopeของฟังก์ชันเท่านั้น
    Global Variables คือ ตัวแปรที่ถูกประกาศไว้ภายนอกฟังก์ชัน และทุกฟังก์ชันสามารถใช้ตัวแปร
global ได้

**************************************************************************************

5.Function Call และ Stack Frames
    ในขณะที่ฟังก์ชันถูกเรียกใช้ ฟังก์ชันจะทำการ stack frame เพื่อจัดเก็บข้อมูลของตัวแปร parameter 
และตัวแปร local ที่อยู่ภายในฟังก์ชัน stack frame จะถูกสร้างขึ้นตามจำนวนการเรียกใช้ฟังก์ชัน
    เมื่อฟังก์ชันทำงานจนเจอคำสั่ง return stack frame จะถูกรีเซตใหม่

**************************************************************************************
